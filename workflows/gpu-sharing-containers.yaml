apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: gpu-sharing-containers-
spec:
  serviceAccountName: argo-workflow
  entrypoint: pass-args
  templates:
  - name: pass-args
    steps:
    - - name: gpu-allocation
        template: gpu-allocation
    - - name: print-message
        template: print-info
        arguments:
          parameters:
          - name: device_id
            value: "{{steps.gpu-allocation.outputs.parameters.device_id}}"
          - name: node_name
            value: "{{steps.gpu-allocation.outputs.parameters.node_name}}"

  - name: gpu-allocation
    outputs:
      parameters:
      - name: device_id
        valueFrom:
          path: /tmp/device_id.txt
      - name: node_name
        valueFrom:
          path: /tmp/node_name.txt
    tolerations:  # for nvidia.com/gpu tainted nodes.
    - key: "nvidia.com/gpu"
      operator: "Exists"
      effect: "NoSchedule"
    container:
      image: "nvidia/cuda:12.1.0-base-ubuntu18.04"
      command: [sh, -c]
      args:
        - |
          echo -n "$NVIDIA_VISIBLE_DEVICES" > /tmp/device_id.txt
          echo -n "$NODE_NAME" > /tmp/node_name.txt
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      resources:
        limits:
          nvidia.com/gpu: 1  # requesting 1 GPU

  - name: print-info
    inputs:
      parameters:
      - name: device_id
      - name: node_name
    container:
      image: busybox
      command: [sh, -c]
      args:
      - |
        echo "{{inputs.parameters.device_id}}"
        echo "{{inputs.parameters.node_name}}"
